swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
            /accounts:
    get:
      summary: Retrieve all accounts
      description: Retrieve all user accounts.
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved all accounts.
        400:
          description: Unauthorized access to retrieve all accounts.
        501:
          description: Internal Server Error.

  /accounts/{account_id}/transactions:
    get:
      summary: Retrieve all transactions of an account
      description: Retrieve all transactions associated with a specific account.
      security:
        - BearerAuth: []
      parameters:
        - name: account_id
          in: path
          description: The ID of the account for which to fetch transactions.
          required: true
          type: integer
      responses:
        200:
          description: Successfully retrieved all transactions.
        400:
          description: Unauthorized access to retrieve all transactions.
        404:
          description: Account not found.
        501:
          description: Internal Server Error.
  /transactions/{transaction_id}/category:
    put:
      summary: Edit a transaction's category
      description: Edit the category of a specific transaction in my API.
      security:
        - BearerAuth: []
      parameters:
        - name: transaction_id
          in: path
          description: The ID of the transaction to edit.
          required: true
          type: integer
        - name: category
          in: body
          description: The new category to assign to the transaction.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Transaction's category edited successfully.
        400:
          description: Unauthorized access to edit the transaction.
        404:
          description: Transaction not found.
        501:
          description: Internal Server Error.
  /transactions/{transaction_id}/note:
    post:
      summary: Add a note to a transaction
      description: Add a note to a specific transaction in my API.
      security:
        - BearerAuth: []
      parameters:
        - name: transaction_id
          in: path
          description: The ID of the transaction to add a note.
          required: true
          type: integer
        - name: note
          in: body
          description: The note to add to the transaction.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Note added to the transaction successfully.
        400:
          description: Unauthorized access to add a note to the transaction.
        404:
          description: Transaction or account not found.
        501:
          description: Internal Server Error.
  /transactions/{transaction_id}/note/{note_id}:
    delete:
      summary: Delete a note of a transaction
      description: Delete a note from a specific transaction in my API.
      security:
        - BearerAuth: []
      parameters:
        - name: transaction_id
          in: path
          description: The ID of the transaction to delete a note from.
          required: true
          type: integer
        - name: note_id
          in: path
          description: The ID of the note you want to delete.
          required: true
          type: integer
      responses:
        200:
          description: Note deleted from the transaction successfully.
        400:
          description: Unauthorized access to delete the note from the transaction.
        404:
          description: Transaction or note not found.
        501:
          description: Internal Server Error.
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
